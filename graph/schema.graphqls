type Query{
	"""queries for orders in a required region id for active market orders."""
	ordersForRegion(
		region_id : Int
		order_type : Ordertype = all
		type_id : Int
	) : [Order]
	ordersForRegionByName(
		region : String
		order_type : Ordertype = all
		type_id : Int
	) : [Order]
	"""Get information on a solar system."""
	systemById(id : Int) : System
	"""Get information on a station"""
	stationById(id : Int) : Station
	"""Get information on a planet"""
	planetById(id : Int) : Planet
	"""Public information about a corporation"""
	corporationById(id : Int) : Corporation
	"""Get information on a faction"""
	factionByID(id : Int) : Faction
	"""Get history of orders for region and type id"""
	orderHistory(
		region_id : Int
		type_id : Int
	) : [OrderHistory]
}

enum Ordertype {
	buy
	sell
	all
}

"""History of sales of a type by region"""
type OrderHistory {
	"""average sales price"""
	average: Float
	"""date of the history"""
	date: String
	"""highest price paid for item"""
	highest: Float
	"""lowest price paid for item"""
	lowest: Float
	"""number of orders for item type in specified region"""
	order_count: Int
	"""number of units of item in region that were moved"""
	volume: Int
}

"""Object representing a market order"""
type Order {
	"""Duration of Order"""
	duration : Int
	"""Is it a buy order"""
	is_buy_order : Boolean
	"""Date the order was issued"""
	issued : String
	"""Station where the order is placed at"""
	location : Station
	"""id of station where order is placed at"""
	location_id: Int
	"""Minimum volume of purchase"""
	min_volume : Int
	"""unique id of the order"""
	order_id : Int!
	"""Price in isk of the order"""
	price : Float
	"""Range of Order Station/System/Region"""
	range : Range
	"""System where the order is placed"""
	system : System
	"""id of the system where the order is placed"""
	system_id: Int
	"""EVE item type that is in the order"""
	item_type : Item_type
	"""id of item type"""
	type_id : Int
	"""number of items remaining in the order"""
	volume_remain : Int
	"""number of items initally placed in the order"""
	volume_total : Int
}

"""Space station in EVE and information about it."""
type Station{
	"""Max ships that can be docked in the station"""
	max_dockable_ship_volume : Float
	"""Name of the station"""
	name : String
	"""Cost of renting an office for your Corporation"""
	office_rental_cost : Float
	"""Owner ID of Corporation of station"""
	owner : Int
	"""Complex object representing the Corporation that owns the station"""
	owning_corporation : Corporation
	"""x,y,z position of station in space"""
	position : Position
	"""id of the race that the station is built by"""
	race_id : Int
	"""race that the station is built by"""
	race : Race
	"""Floating point percentage of efficiency of the reprocessing facilities of this station"""
	reprocessing_efficiency : Float
	"""floating point percent of take of materials in reprocessing"""
	reprocessing_stations_take : Float
	"""Services provided by the station"""
	services : [Services]
	"""Unique ID of the station"""
	station_id : Int
	"""Unique ID of the system that the station resides in"""
	system_id : Int
	"""System the station resides in"""
	system : System
	"""type id of station"""
	type_id : Int
	"""item type of the station"""
	station_type : Item_type
}

type Corporation{
	alliance : Alliance
	alliance_id : Int
	ceo : Character
	ceo_id : Int
	creator : Character
	creator_id : Int
	date_founded : String
	description : String
	faction : Faction
	faction_id : Int
	home_station : Station
	home_station_id : Int
	member_count : Int
	name : String
	shares : Int
	tax_rate : Float
	ticker : String
	url : String
	war_eligible : Boolean
}

type Alliance{
	creator_corporation_id : Int
	creator_corporation : Corporation
	creator_id : Int
	creator : Character
	date_founded : String
	executor_corporation_id : Int
	executor_corporation : Corporation
	faction_id : Int
	faction : Faction
	name : String
	ticker : String
}

type Character{
	alliance_id : Int
	alliance : Alliance
	ancestry_id : Int
	ancestry : Ancestry
	birthday : String
	bloodline_id : Int
	bloodline : Bloodline
	corporation_id : Int
	corporation : Corporation
	description : String
	faction_id : Int
	faction : Faction
	gender : Gender
	name : String
	race_id : Int
	race : Race
	security_status : Float
	title : String
}

type Ancestry{
	bloodline_id : Int
	bloodline : Bloodline
	description : String
	icon_id : Int
	id : Int
	name : String
	short_description : String
}

type Bloodline{
	bloodline_id : Int
	charisma : Int
	corporation_id : Int
	corporation : Corporation
	description : String
	intelligence : Int
	memory : Int
	name : String
	perception : Int
	race_id : Int
	race : Race
	ship_type_id : Int
	ship_type : Item_type
	willpower : Int
}

type Race{
	alliance : Alliance
	description : String
	name : String
	race_id : Int
}

type Item_type{
	type_id : Int
	capacity : Float
	description : String
	dogma_attributes : [Dogma_attribute]
	dogma_effects : [Dogma_effect]
	graphic_id : Int
	graphic : Graphic
	group_id : Int
	group : Group
	icon_id : Int
	market_group_id : Int
	market_group : Market_group
	mass : Float
	name : String
	packaged_volume : Float
	portion_size : Int
	published : Boolean
	radius : Float
	volume : Float
}

type Dogma_attribute{
	attribute : Dogma_attribute_detail
	attribute_id : Int
	value : Float
}

type Dogma_attribute_detail{
	attribute_id : Int
	default_value : Float
	description : String
	display_name : String
	high_is_good : Boolean
	icon : Icon
	name : String
	published : Boolean
	stackable : Boolean
	unit : Unit
}

type Icon{
	id : Int
}

type Unit{
	id : Int
}

type Dogma_effect{
	effect_id : Int
	effect : Dogma_effect_detail
	is_default : Boolean
}

type Dogma_effect_detail{
	description : String
	disallow_auto_repeat : Boolean
	discharge_attribute_id : Int
	discharge_attribute : Dogma_attribute_detail
	display_name : String
	duration_attribute_id : Int
	duration_attribute : Dogma_attribute_detail
	effect_category : Int
	effect_id : Int
	electronic_chance : Boolean
	falloff_attribute_id : Int
	falloff_attribute : Dogma_attribute_detail
	icon : Icon
	is_assistance : Boolean
	is_offensive : Boolean
	is_warp_safe : Boolean
	modifiers : [Modifier]
	name : String
	post_expression : Int
	pre_expression : Int
	published : Boolean
	range_attribute_id : Int
	range_attribute : Dogma_attribute_detail
	range_change : Boolean
	tracking_speed_attribute_id : Int
	tracking_speed_attribute : Dogma_attribute_detail
}

type Modifier{
	domain : String
	effect_id : Int
	func : String
	modified_attribute_id : Int
	modified_attribute : Dogma_attribute_detail
	modifying_attribute_id : Int
	modifying_attribute : Dogma_attribute_detail
	operator : Int
}

type Graphic{
	collision_file : String
	graphic_file : String
	graphic_id : Int
	icon_folder : String
	sof_dna : String
	sof_faction_name : String
	sof_hull_name : String
	sof_race_name : String
}

type Group{
	category_id : Int
	category : Category
	group_id : Int
	name : String
	published : Boolean
	types : [Int]
	item_types : [Item_type]
}

type Category{
	category_id : Int
	category_groups : [Group]
	name : String
	published : Boolean
}

type Market_group{
	description : String
	id : Int
	name : String
	parent_group_id : Int
	parent_group : Group
	types : [Int]
	types_details : [Item_type]
}

type Faction{
	corporation_id : Int
	corporation : Corporation
	description : String
	faction_id : Int
	is_unique : Boolean
	militia_corporation_id : Int
	militia_corporation : Corporation
	name : String
	size_factor : Float
	solar_system_id : Int
	solar_system : System
	station_count : Int
	station_system_count : Int
}

type System{
	constellation_id : Int
	constellation : Constellation
	name : String
	planets : [System_planet]
	position : Position
	security_class : String
	star_id : Int
	star : Star
	stargates : [Int]
	stargate_list : [Stargate]
	stations : [Int]
	station_list : [Station]
	system_id : Int
}

type Constellation{
	constellation_id : Int
	name : String
	position : Position
	region_id : Int
	region : Region
	systems : [Int]
	solar_systems : [System]
}

type Position{
	x : Float
	y : Float
	z : Float
}

type Region{
	constellations : [Int]
	constellation_list : [Constellation]
	description : String
	name : String
	region_id : Int
}

type Planet{
	name : String
	planet_id : Int
	position : Position
	system : System
	system_id : Int
	item_type : Item_type
	type_id : Int
}

type System_planet{
	asteroid_belts_properties : [Asteroid_belt]
	asteroid_belts : [Int]
	moons : [Int]
	moon_details : [Moon]
	planet_properties : Planet
	planet_id: Int
}

type Asteroid_belt{
	name : String
	position : Position
	system : System
	system_id : Int
}

type Moon{
	moon_id : Int
	name : String
	position : Position
	system_id : Int
	system : System
}

type Star{
	age : Int
	luminosity : Float
	name : String
	radius : Int
	solar_system_id : Int
	solar_system : System
	spectral_class : Spectral_class
	star_id : Int
	temperature : Int
	type_id : Int
	item_type : Item_type
}

enum Spectral_class{
	K2_V
	K4_V
	G2_V
	G8_V
	M7_V
	K7_V
	M2_V
	K5_V
	M3_V
	G0_V
	G7_V
	G3_V
	F9_V
	G5_V
	F6_V
	K8_V
	K9_V
	K6_V
	G9_V
	G6_V
	G4_VI
	G4_V
	F8_V
	F2_V
	F1_V
	K3_V
	F0_VI
	G1_VI
	G0_VI
	K1_V
	M4_V
	M1_V
	M6_V
	M0_V
	K2_IV
	G2_VI
	K0_V
	K5_IV
	F5_VI
	G6_VI
	F6_VI
	F2_IV
	G3_VI
	M8_V
	F1_VI
	K1_IV
	F7_V
	G5_VI
	M5_V
	G7_VI
	F5_V
	F4_VI
	F8_VI
	K3_IV
	F4_IV
	F0_V
	G7_IV
	G8_VI
	F2_VI
	F4_V
	F7_VI
	F3_V
	G1_V
	G9_VI
	F3_IV
	F9_VI
	M9_V
	K0_IV
	F1_IV
	G4_IV
	F3_VI
	K4_IV
	G5_IV
	G3_IV
	G1_IV
	K7_IV
	G0_IV
	K6_IV
	K9_IV
	G2_IV
	F9_IV
	F0_IV
	K8_IV
	G8_IV
	F6_IV
	F5_IV
	A0
	A0IV
	A0IV2
}

type Stargate{
	destination : StargateDestination
	name : String
	position : Position
	stargate_id : Int
	system : System
	type_id : Int
	item_type : Item_type
}

type StargateDestination{
	stargate_id : Int
	stargate : Stargate
	system_id : Int
	system : System
}

enum Gender{
	male
	female
}

enum Services{
	bounty_missions
	assasination_missions
	courier_missions
	interbus
	reprocessing_plant
	refinery
	market
	black_market
	stock_exchange
	cloning
	surgery
	dna_therapy
	repair_facilities
	factory
	labratory
	gambling
	fitting
	paintshop
	news
	storage
	insurance
	docking
	office_rental
	jump_clone_facility
	loyalty_point_store
	navy_offices
	security_offices
}

enum Range{
	station
	region
	solarsystem
	range_1
	range_2
	range_3
	range_4
	range_5
	range_10
	range_20
	range_30
	range_40
}

schema{
	query: Query
}