name: go-build
on: [push]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: make-output-directory
      run: mkdir output

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./... -json > output/test-report.out

    - name: cover
      run: |
        go test -race -coverpkg $(go list ./... | grep -v generated | tr '\n' ',') -coverprofile output/cover.out ./...
        go tool cover -func=output/cover.out | grep total
        go tool cover --html=output/cover.out -o output/coverage.html

    - name: declare-sha-variable
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: push-coverage-to-gitlab-pages-latest
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'output'
        destination-github-username: 'cryanbrow'
        destination-repository-name: 'cryanbrow.github.io'
        user-email: cryanbrow@gmail.com
        target-branch: main
        target-directory: 'eve-graphql-go/latest'
    
    - name: push-coverage-to-gitlab-pages-hash
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'output'
        destination-github-username: 'cryanbrow'
        destination-repository-name: 'cryanbrow.github.io'
        user-email: cryanbrow@gmail.com
        target-branch: main
        target-directory: 'eve-graphql-go/${{ steps.vars.outputs.sha_short }}'

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}