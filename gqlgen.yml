# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/cryanbrow/eve-graphql-go/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  Order:
    fields:
      location:
        resolver: true
      system:
        resolver: true
      item_type:
        resolver: true
  System_planet:
    fields:
      asteroid_belts_properties:
        resolver: true
      planet_properties:
        resolver: true
      moon_details:
        resolver: true
  Item_type:
    fields:
      market_group:
        resolver: true
      graphic:
        resolver: true
      group:
        resolver: true
  Dogma_attribute:
    fields:
      attribute:
        resolver: true
  Dogma_effect:
    fields:
      effect:
        resolver: true
  Dogma_effect_detail:
    fields:
      discharge_attribute:
        resolver: true
      duration_attribute:
        resolver: true
      falloff_attribute:
        resolver: true
      range_attribute:
        resolver: true
      tracking_speed_attribute:
        resolver: true
  Modifier:
    fields:
      modified_attribute:
        resolver: true
      modifying_attribute:
        resolver: true
  Asteroid_belt:
    fields:
      system:
        resolver: true
  Market_group:
    fields:
      parent_group:
        resolver: true
      types_details:
        resolver: true
  Group:
    fields:
      category:
        resolver: true
      item_types:
        resolver: true
  Planet:
    fields:
      item_type:
        resolver: true
      system:
        resolver: true
  Corporation:
    fields:
      alliance:
        resolver: true
      ceo:
        resolver: true
      creator: 
        resolver: true
      faction: 
        resolver: true
      home_station:
        resolver: true
  Faction:
    fields:
      corporation:
        resolver: true
      militia_corporation:
        resolver: true
      solar_system:
        resolver : true
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
